{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "SAMEORIGIN"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "origin-when-cross-origin"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/admin/departments/[id]/edit",
      "regex": "^/admin/departments/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/admin/departments/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/api/asset-groups/[id]",
      "regex": "^/api/asset\\-groups/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/asset\\-groups/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/assets/[id]",
      "regex": "^/api/assets/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/assets/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/categories/[id]",
      "regex": "^/api/categories/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/categories/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/clients/[id]",
      "regex": "^/api/clients/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/clients/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/departments/[id]",
      "regex": "^/api/departments/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/departments/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/locations/[id]",
      "regex": "^/api/locations/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/locations/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/maintenance/[id]",
      "regex": "^/api/maintenance/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/maintenance/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/presets/[id]",
      "regex": "^/api/presets/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/presets/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/presets/[id]/complete",
      "regex": "^/api/presets/([^/]+?)/complete(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/presets/(?<nxtPid>[^/]+?)/complete(?:/)?$"
    },
    {
      "page": "/api/presets/[id]/substitutions",
      "regex": "^/api/presets/([^/]+?)/substitutions(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/presets/(?<nxtPid>[^/]+?)/substitutions(?:/)?$"
    },
    {
      "page": "/api/users/[id]",
      "regex": "^/api/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/users/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/users/[id]/reset-password",
      "regex": "^/api/users/([^/]+?)/reset\\-password(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/users/(?<nxtPid>[^/]+?)/reset\\-password(?:/)?$"
    },
    {
      "page": "/api/users/[id]/transfer",
      "regex": "^/api/users/([^/]+?)/transfer(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/users/(?<nxtPid>[^/]+?)/transfer(?:/)?$"
    },
    {
      "page": "/asset-groups/[id]",
      "regex": "^/asset\\-groups/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/asset\\-groups/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/assets/[id]",
      "regex": "^/assets/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/assets/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/locations/[id]",
      "regex": "^/locations/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/locations/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/presets/[id]",
      "regex": "^/presets/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/presets/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/bulk-assign-numbers",
      "regex": "^/admin/bulk\\-assign\\-numbers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/bulk\\-assign\\-numbers(?:/)?$"
    },
    {
      "page": "/admin/departments",
      "regex": "^/admin/departments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/departments(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/admin/users/new",
      "regex": "^/admin/users/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users/new(?:/)?$"
    },
    {
      "page": "/asset-groups",
      "regex": "^/asset\\-groups(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/asset\\-groups(?:/)?$"
    },
    {
      "page": "/assets",
      "regex": "^/assets(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/assets(?:/)?$"
    },
    {
      "page": "/assets/cart",
      "regex": "^/assets/cart(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/assets/cart(?:/)?$"
    },
    {
      "page": "/assets/new",
      "regex": "^/assets/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/assets/new(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/categories",
      "regex": "^/categories(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/categories(?:/)?$"
    },
    {
      "page": "/clients",
      "regex": "^/clients(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clients(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/locations",
      "regex": "^/locations(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/locations(?:/)?$"
    },
    {
      "page": "/maintenance",
      "regex": "^/maintenance(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/maintenance(?:/)?$"
    },
    {
      "page": "/presets",
      "regex": "^/presets(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/presets(?:/)?$"
    },
    {
      "page": "/presets/new",
      "regex": "^/presets/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/presets/new(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/reports",
      "regex": "^/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reports(?:/)?$"
    },
    {
      "page": "/transactions",
      "regex": "^/transactions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/transactions(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}